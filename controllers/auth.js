//imports
const crypto = require("crypto");
const User = require("../models/User");
const ErrorResponse = require("../utils/errorResponse");
const sendEmail = require("../utils/sendEmail");

// register controller 👇👇

exports.register = async (req, res, next) => {
  const { username, email, password } = req.body;

  try {
    const user = await User.create({
      username,
      email,
      password,
    });

    sendToken(user, 201, res);
  } catch (error) {
    console.error(error);
    next(error);
  }
};

// register controller 👆☝

// login controller 👇👇

exports.login = async (req, res, next) => {
  const { email, password } = req.body;
  if (!email || !password) {
    return next(new ErrorResponse("Please provide email & password", 400));
  }

  try {
    const user = await User.findOne({ email }).select("+password");
    if (!user) {
      return next(new ErrorResponse("Invalid Credentials", 401));
    }

    const isMatch = await user.matchPasswords(password);

    if (!isMatch) {
      return next(new ErrorResponse("Invalid Credentials", 401));
    }
    console.log(user);
    sendToken(user, 200, res);
  } catch (error) {
    res.status(500).json({ success: false, error: error.message });
  }
};

// login controller 👆☝

// forgotpassword controller 👇👇

exports.forgotpassword = async (req, res, next) => {
  const { email } = req.body;

  try {
    const user = await User.findOne({ email });

    if (!user) {
      return next(new ErrorResponse("Email not sent", 404));
    }

    const resetToken = user.getResetPasswordToken();

    await user.save();

    const resetUrl = `http://localhost:3000/passwordreset/${resetToken}`;

    const message = `<!DOCTYPE html>
    <html lang="en-US">
    
    <head>
        <meta content="text/html; charset=utf-8" http-equiv="Content-Type" />
        <title>Reset Password Email Template</title>
        <meta name="description" content="Reset Password Email Template." />
        <style type="text/css">
            a:hover {
                text-decoration: underline !important;
            }
        </style>
    </head>
    
    <body marginheight="0" topmargin="0" marginwidth="0" style="margin: 0px; background-color: #f2f3f8;" leftmargin="0">
        <!--100% body table-->
        <table cellspacing="0" border="0" cellpadding="0" width="100%" bgcolor="#f2f3f8" style="
            @import url(https://fonts.googleapis.com/css?family=Rubik:300,400,500,700|Open+Sans:300,400,600,700);
            font-family: 'Open Sans', sans-serif;
            background-image: linear-gradient(
              to bottom right,
              rgb(252, 209, 209),
              rgb(0, 66, 189),
              rgb(74, 134, 247),
              rgb(0, 66, 189),
              rgb(252, 209, 209)
            );
          ">
            <tr>
                <td>
                    <table style="max-width: 670px; margin: 0 auto" width="100%" border="0" align="center" cellpadding="0" cellspacing="0">
                        <tr>
                            <td style="height: 80px">&nbsp;</td>
                        </tr>
                        <tr>
                            <td style="text-align: center; align-items: center;justify-content: center;">
                                <a href="https://rakeshmandal.com" title="logo" target="_blank">
                                    <svg width="231" height="80" viewBox="0 0 231 80" fill="none" xmlns="http://www.w3.org/2000/svg">
                                        <path d="M155.278 55.008C155.782 55.008 156.25 55.212 156.682 55.62C157.114 56.052 157.33 56.544 157.33 57.096C157.33 57.648 157.078 58.164 156.574 58.644C156.094 59.148 155.47 59.592 154.702 59.976C153.934 60.36 153.13 60.66 152.29 60.876C151.474 61.092 150.73 61.2 150.058 61.2C148.57 61.2 147.382 61.056 146.494 60.768C145.606 60.504 144.874 60.192 144.298 59.832C143.722 59.496 143.182 59.184 142.678 58.896C142.174 58.632 141.562 58.5 140.842 58.5C140.386 58.5 140.014 58.572 139.726 58.716C139.462 58.884 139.162 59.04 138.826 59.184C138.514 59.352 138.07 59.436 137.494 59.436C136.894 59.436 136.39 59.208 135.982 58.752C135.574 58.296 135.37 57.804 135.37 57.276C135.37 56.34 135.79 55.716 136.63 55.404L144.082 52.632L147.322 53.424L140.338 56.016L142.39 54.828C143.23 54.828 143.962 54.948 144.586 55.188C145.234 55.452 145.846 55.74 146.422 56.052C146.998 56.364 147.586 56.64 148.186 56.88C148.81 57.144 149.518 57.276 150.31 57.276C150.958 57.276 151.498 57.168 151.93 56.952C152.386 56.736 152.782 56.496 153.118 56.232C153.526 55.92 153.886 55.632 154.198 55.368C154.534 55.128 154.894 55.008 155.278 55.008ZM155.134 41.4C155.134 43.2 154.834 44.88 154.234 46.44C153.634 48 152.782 49.38 151.678 50.58C150.598 51.756 149.302 52.68 147.79 53.352C146.302 54.024 144.67 54.36 142.894 54.36C141.118 54.36 139.486 54.024 137.998 53.352C136.51 52.68 135.214 51.756 134.11 50.58C133.03 49.38 132.19 48 131.59 46.44C130.99 44.88 130.69 43.2 130.69 41.4C130.69 39.6 130.99 37.92 131.59 36.36C132.19 34.8 133.03 33.432 134.11 32.256C135.214 31.056 136.51 30.12 137.998 29.448C139.486 28.776 141.118 28.44 142.894 28.44C144.67 28.44 146.302 28.776 147.79 29.448C149.302 30.12 150.598 31.056 151.678 32.256C152.782 33.432 153.634 34.8 154.234 36.36C154.834 37.92 155.134 39.6 155.134 41.4ZM150.454 41.4C150.454 39.792 150.13 38.34 149.482 37.044C148.834 35.724 147.946 34.68 146.818 33.912C145.69 33.144 144.382 32.76 142.894 32.76C141.406 32.76 140.098 33.144 138.97 33.912C137.842 34.68 136.954 35.712 136.306 37.008C135.682 38.304 135.37 39.768 135.37 41.4C135.37 43.008 135.682 44.472 136.306 45.792C136.954 47.088 137.842 48.12 138.97 48.888C140.098 49.656 141.406 50.04 142.894 50.04C144.382 50.04 145.69 49.656 146.818 48.888C147.946 48.12 148.834 47.088 149.482 45.792C150.13 44.472 150.454 43.008 150.454 41.4ZM162.834 51.804C162.834 52.428 162.63 52.956 162.222 53.388C161.814 53.796 161.298 54 160.674 54C160.05 54 159.534 53.796 159.126 53.388C158.718 52.956 158.514 52.428 158.514 51.804V36.936C158.514 36.312 158.718 35.796 159.126 35.388C159.534 34.956 160.05 34.74 160.674 34.74C161.298 34.74 161.814 34.956 162.222 35.388C162.63 35.796 162.834 36.312 162.834 36.936V51.804ZM160.638 32.4C159.822 32.4 159.246 32.268 158.91 32.004C158.574 31.74 158.406 31.272 158.406 30.6V29.916C158.406 29.22 158.586 28.752 158.946 28.512C159.33 28.248 159.906 28.116 160.674 28.116C161.514 28.116 162.102 28.248 162.438 28.512C162.774 28.776 162.942 29.244 162.942 29.916V30.6C162.942 31.296 162.762 31.776 162.402 32.04C162.042 32.28 161.454 32.4 160.638 32.4ZM183.042 34.74C183.666 34.74 184.182 34.944 184.59 35.352C184.998 35.76 185.202 36.288 185.202 36.936V59.004C185.202 59.628 184.998 60.144 184.59 60.552C184.182 60.984 183.666 61.2 183.042 61.2C182.418 61.2 181.902 60.984 181.494 60.552C181.086 60.144 180.882 59.628 180.882 59.004V50.04L181.674 50.364C181.674 50.676 181.506 51.06 181.17 51.516C180.834 51.948 180.378 52.38 179.802 52.812C179.226 53.244 178.542 53.616 177.75 53.928C176.982 54.216 176.142 54.36 175.23 54.36C173.574 54.36 172.074 53.94 170.73 53.1C169.386 52.236 168.318 51.06 167.526 49.572C166.758 48.06 166.374 46.332 166.374 44.388C166.374 42.42 166.758 40.692 167.526 39.204C168.318 37.692 169.374 36.516 170.694 35.676C172.014 34.812 173.478 34.38 175.086 34.38C176.118 34.38 177.066 34.536 177.93 34.848C178.794 35.16 179.538 35.556 180.162 36.036C180.81 36.516 181.302 37.008 181.638 37.512C181.998 37.992 182.178 38.4 182.178 38.736L180.882 39.204V36.936C180.882 36.312 181.086 35.796 181.494 35.388C181.902 34.956 182.418 34.74 183.042 34.74ZM175.77 50.4C176.826 50.4 177.75 50.136 178.542 49.608C179.334 49.08 179.946 48.36 180.378 47.448C180.834 46.536 181.062 45.516 181.062 44.388C181.062 43.236 180.834 42.204 180.378 41.292C179.946 40.38 179.334 39.66 178.542 39.132C177.75 38.604 176.826 38.34 175.77 38.34C174.738 38.34 173.826 38.604 173.034 39.132C172.242 39.66 171.618 40.38 171.162 41.292C170.73 42.204 170.514 43.236 170.514 44.388C170.514 45.516 170.73 46.536 171.162 47.448C171.618 48.36 172.242 49.08 173.034 49.608C173.826 50.136 174.738 50.4 175.77 50.4ZM205.647 34.38C206.271 34.38 206.787 34.584 207.195 34.992C207.603 35.4 207.807 35.928 207.807 36.576V51.804C207.807 52.428 207.603 52.956 207.195 53.388C206.787 53.796 206.271 54 205.647 54C205.023 54 204.507 53.796 204.099 53.388C203.691 52.956 203.487 52.428 203.487 51.804V50.04L204.279 50.364C204.279 50.676 204.111 51.06 203.775 51.516C203.439 51.948 202.983 52.38 202.407 52.812C201.831 53.244 201.147 53.616 200.355 53.928C199.587 54.216 198.747 54.36 197.835 54.36C196.179 54.36 194.679 53.94 193.335 53.1C191.991 52.236 190.923 51.06 190.131 49.572C189.363 48.06 188.979 46.332 188.979 44.388C188.979 42.42 189.363 40.692 190.131 39.204C190.923 37.692 191.979 36.516 193.299 35.676C194.619 34.812 196.083 34.38 197.691 34.38C198.723 34.38 199.671 34.536 200.535 34.848C201.399 35.16 202.143 35.556 202.767 36.036C203.415 36.516 203.907 37.008 204.243 37.512C204.603 37.992 204.783 38.4 204.783 38.736L203.487 39.204V36.576C203.487 35.952 203.691 35.436 204.099 35.028C204.507 34.596 205.023 34.38 205.647 34.38ZM198.375 50.4C199.431 50.4 200.355 50.136 201.147 49.608C201.939 49.08 202.551 48.36 202.983 47.448C203.439 46.536 203.667 45.516 203.667 44.388C203.667 43.236 203.439 42.204 202.983 41.292C202.551 40.38 201.939 39.66 201.147 39.132C200.355 38.604 199.431 38.34 198.375 38.34C197.343 38.34 196.431 38.604 195.639 39.132C194.847 39.66 194.223 40.38 193.767 41.292C193.335 42.204 193.119 43.236 193.119 44.388C193.119 45.516 193.335 46.536 193.767 47.448C194.223 48.36 194.847 49.08 195.639 49.608C196.431 50.136 197.343 50.4 198.375 50.4ZM228.253 27.36C228.877 27.36 229.393 27.564 229.801 27.972C230.209 28.38 230.413 28.908 230.413 29.556V51.804C230.413 52.428 230.209 52.956 229.801 53.388C229.393 53.796 228.877 54 228.253 54C227.629 54 227.113 53.796 226.705 53.388C226.297 52.956 226.093 52.428 226.093 51.804V50.04L226.885 50.364C226.885 50.676 226.717 51.06 226.381 51.516C226.045 51.948 225.589 52.38 225.013 52.812C224.437 53.244 223.753 53.616 222.961 53.928C222.193 54.216 221.353 54.36 220.441 54.36C218.785 54.36 217.285 53.94 215.941 53.1C214.597 52.236 213.529 51.06 212.737 49.572C211.969 48.06 211.585 46.332 211.585 44.388C211.585 42.42 211.969 40.692 212.737 39.204C213.529 37.692 214.585 36.516 215.905 35.676C217.225 34.812 218.689 34.38 220.297 34.38C221.329 34.38 222.277 34.536 223.141 34.848C224.005 35.16 224.749 35.556 225.373 36.036C226.021 36.516 226.513 37.008 226.849 37.512C227.209 37.992 227.389 38.4 227.389 38.736L226.093 39.204V29.556C226.093 28.932 226.297 28.416 226.705 28.008C227.113 27.576 227.629 27.36 228.253 27.36ZM220.981 50.4C222.037 50.4 222.961 50.136 223.753 49.608C224.545 49.08 225.157 48.36 225.589 47.448C226.045 46.536 226.273 45.516 226.273 44.388C226.273 43.236 226.045 42.204 225.589 41.292C225.157 40.38 224.545 39.66 223.753 39.132C222.961 38.604 222.037 38.34 220.981 38.34C219.949 38.34 219.037 38.604 218.245 39.132C217.453 39.66 216.829 40.38 216.373 41.292C215.941 42.204 215.725 43.236 215.725 44.388C215.725 45.516 215.941 46.536 216.373 47.448C216.829 48.36 217.453 49.08 218.245 49.608C219.037 50.136 219.949 50.4 220.981 50.4Z" fill="white"/>
                                        <rect x="75.0693" width="60" height="60" rx="14" transform="rotate(25.5 75.0693 0)" fill="#8AA7F2"/>
                                        <rect x="59" y="10" width="60" height="60" rx="14" fill="#215DF9" fill-opacity="0.6"/>
                                        <path d="M111.461 58.82C112.371 58.82 113.216 59.1883 113.996 59.925C114.776 60.705 115.166 61.5933 115.166 62.59C115.166 63.5867 114.711 64.5183 113.801 65.385C112.935 66.295 111.808 67.0967 110.421 67.79C109.035 68.4833 107.583 69.025 106.066 69.415C104.593 69.805 103.25 70 102.036 70C99.3496 70 97.2046 69.74 95.6013 69.22C93.998 68.7433 92.6763 68.18 91.6363 67.53C90.5963 66.9233 89.6213 66.36 88.7113 65.84C87.8013 65.3633 86.6963 65.125 85.3963 65.125C84.573 65.125 83.9013 65.255 83.3813 65.515C82.9046 65.8183 82.363 66.1 81.7563 66.36C81.193 66.6633 80.3913 66.815 79.3513 66.815C78.268 66.815 77.358 66.4033 76.6213 65.58C75.8846 64.7567 75.5163 63.8683 75.5163 62.915C75.5163 61.225 76.2746 60.0983 77.7913 59.535L91.2463 54.53L97.0963 55.96L84.4863 60.64L88.1913 58.495C89.708 58.495 91.0296 58.7117 92.1563 59.145C93.3263 59.6217 94.4313 60.1417 95.4713 60.705C96.5113 61.2683 97.573 61.7667 98.6563 62.2C99.783 62.6767 101.061 62.915 102.491 62.915C103.661 62.915 104.636 62.72 105.416 62.33C106.24 61.94 106.955 61.5067 107.561 61.03C108.298 60.4667 108.948 59.9467 109.511 59.47C110.118 59.0367 110.768 58.82 111.461 58.82ZM111.201 34.25C111.201 37.5 110.66 40.5333 109.576 43.35C108.493 46.1667 106.955 48.6583 104.961 50.825C103.011 52.9483 100.671 54.6167 97.9413 55.83C95.2546 57.0433 92.308 57.65 89.1013 57.65C85.8946 57.65 82.948 57.0433 80.2613 55.83C77.5746 54.6167 75.2346 52.9483 73.2413 50.825C71.2913 48.6583 69.7746 46.1667 68.6913 43.35C67.608 40.5333 67.0663 37.5 67.0663 34.25C67.0663 31 67.608 27.9667 68.6913 25.15C69.7746 22.3333 71.2913 19.8633 73.2413 17.74C75.2346 15.5733 77.5746 13.8833 80.2613 12.67C82.948 11.4567 85.8946 10.85 89.1013 10.85C92.308 10.85 95.2546 11.4567 97.9413 12.67C100.671 13.8833 103.011 15.5733 104.961 17.74C106.955 19.8633 108.493 22.3333 109.576 25.15C110.66 27.9667 111.201 31 111.201 34.25ZM102.751 34.25C102.751 31.3467 102.166 28.725 100.996 26.385C99.8263 24.0017 98.223 22.1167 96.1863 20.73C94.1496 19.3433 91.788 18.65 89.1013 18.65C86.4146 18.65 84.053 19.3433 82.0163 20.73C79.9796 22.1167 78.3763 23.98 77.2063 26.32C76.0796 28.66 75.5163 31.3033 75.5163 34.25C75.5163 37.1533 76.0796 39.7967 77.2063 42.18C78.3763 44.52 79.9796 46.3833 82.0163 47.77C84.053 49.1567 86.4146 49.85 89.1013 49.85C91.788 49.85 94.1496 49.1567 96.1863 47.77C98.223 46.3833 99.8263 44.52 100.996 42.18C102.166 39.7967 102.751 37.1533 102.751 34.25Z" fill="white"/>
                                        </svg>
    
                                </a>
                            </td>
                        </tr>
                        <tr>
                            <td style="height: 20px">&nbsp;</td>
                        </tr>
                        <tr>
                            <td>
                                <table width="95%" border="0" align="center" cellpadding="0" cellspacing="0" style="
                        max-width: 670px;
                        background: #fff;
                        border-radius: 3px;
                        text-align: center;
                        -webkit-box-shadow: 0 6px 18px 0 rgba(0, 0, 0, 0.06);
                        -moz-box-shadow: 0 6px 18px 0 rgba(0, 0, 0, 0.06);
                        box-shadow: 0 6px 18px 0 rgba(0, 0, 0, 0.06);
                      ">
                                    <tr>
                                        <td style="height: 40px">&nbsp;</td>
                                    </tr>
                                    <tr>
                                        <td style="padding: 0 35px">
                                            <h1 style="
                              color: #1e1e2d;
                              font-weight: 500;
                              margin: 0;
                              font-size: 32px;
                              font-family: 'Rubik', sans-serif;
                            ">
                                                You have requested to reset your password
                                            </h1>
                                            <span style="
                              display: inline-block;
                              vertical-align: middle;
                              margin: 29px 0 26px;
                              border-bottom: 1px solid #cecece;
                              width: 100px;
                            "></span>
                                            <p style="
                              color: #455056;
                              font-size: 15px;
                              line-height: 24px;
                              margin: 0;
                            ">
                                                We cannot simply send you your old password. A unique link to reset your password has been generated for you. To reset your password, click the following link and follow the instructions.
                                            </p>
                                            <a href=${resetUrl} style="
                              background: #20e277;
                              text-decoration: none !important;
                              font-weight: 500;
                              margin-top: 35px;
                              color: #fff;
                              text-transform: uppercase;
                              font-size: 14px;
                              padding: 10px 24px;
                              display: inline-block;
                              border-radius: 50px;
                            ">Reset Password</a
                          >
                        </td>
                      </tr>
                      <tr>
                        <td style="height: 40px">&nbsp;</td>
                      </tr>
                    </table>
                  </td>
                </tr>
    
                <tr>
                  <td style="height: 20px">&nbsp;</td>
                </tr>
                <tr>
                  <td style="text-align: center">
                    <p
                      style="
                        font-size: 14px;
                        color: rgba(69, 80, 86, 0.7411764705882353);
                        line-height: 18px;
                        margin: 0 0 0;
                      "
                    >
                      &copy; <strong>qiqad.github.io</strong>
                    </p>
                  </td>
                </tr>
                <tr>
                  <td style="height: 80px">&nbsp;</td>
                </tr>
              </table>
            </td>
          </tr>
        </table>
        <!--/100% body table-->
      </body>
    </html>`;

    try {
      await sendEmail({
        to: user.email,
        subject: "Password Reset",
        text: message,
      });

      res.status(200).json({ success: true, data: "Email Sent" });
    } catch (error) {
      user.resetPasswordToken = undefined;
      user.resetPasswordExpire = undefined;

      await user.save();

      return next(new ErrorResponse("Email Could Not Be Sent", 500));
    }
  } catch (error) {
    next(error);
  }
};

// forgotpassword controller 👆☝

// reset-password controller 👇👇

exports.resetpassword = async (req, res, next) => {
  const resetPasswordToken = crypto
    .createHash("sha256")
    .update(req.params.resetToken)
    .digest("hex");

  try {
    const user = await User.findOne({
      resetPasswordToken,
      resetPasswordExpire: { $gt: Date.now() },
    });

    if (!user) {
      return next(new ErrorResponse("Invalid Reset Token", 400));
    }

    user.password = req.body.password;
    user.resetPasswordToken = undefined;
    user.resetPasswordExpire = undefined;

    await user.save();

    res.status(201).json({ success: true, data: "Password Reset Success" });
  } catch (error) {
    next(error);
  }
};

// reset-password controller 👆☝

const sendToken = (user, statusCode, res) => {
  const token = user.getSignedToken();
  res.status(statusCode).json({ success: true, token });
};
